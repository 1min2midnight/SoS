package dev.demian.sos;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;

public class Game implements Runnable
{
	private Display display;
	
	public String title;
	public int width;
	public int height;
	
	
	
	private boolean running = false;
	private Thread thread;
	
	private BufferStrategy bs;
	private Graphics g;
	
	//test code:
	private BufferedImage testImage;
	
	public Game(String title, int width, int height)
	{
		this.title = title;
		this.width = width;
		this.height = height;
		
		
		
	}
	private void tick()
	{
		
		
	}
	private void render()
	{
		bs = display.getCanvas().getBufferStrategy();
		
		if(bs==null)
		{
			display.getCanvas().createBufferStrategy(3);
			return;
		}
		
		g = bs.getDrawGraphics();
		
		
		
		//clear screen
		g.clearRect(0, 0, width, height);
		//drawings:
		
		g.drawImage(testImage,20,20,null);
	}
	private void init() 
	{
		display = new Display(title,width,height);
		testImage = ImageLoader.loadImage("src/res/textures/cobain.jpg");
		
	}
	
	public void run()
	{
		init();
		while(running)
		{
			tick();
			render();
			
		}
		stop();
	}
	public synchronized void start()
	{
		if(running)
			return;
		running =true;
		thread = new Thread(this);
		thread.start();
	}
	public synchronized void stop() 
	{
		if(running == false)
			return;
		running = false;
		try {
		thread.join();
		}
		catch(InterruptedException e) 
		{
			e.printStackTrace();
		}
	}

}
